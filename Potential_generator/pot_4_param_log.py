
import tensorflow as tf
import numpy as np

dim = 4

def V(x):
    """
    0.5 * (ex7 ** 6 -4 * (-1 + x1 ** 2 + x3 ** 2) + (ex7 ** -6) * ((x1 ** 2 + x3 ** 2) ** 2) + 2 * (ex7 ** -4) * (ex9 ** (-2 * (3 ** -0.5))) * ((ex9 ** (np.sqrt(3))) * (x1 ** 2) + x3 ** 2) + 2 * (ex7 ** 4) * (ex9 ** (-(3 ** -0.5))) * (x1 ** 2 + (ex9 ** (np.sqrt(3))) * (x3 ** 2)) + (ex7 ** 2) * (ex9 ** (-2 * (3 ** -0.5))) * (-2 + x1 ** 4 + (ex9 ** (2 * (np.sqrt(3)))) * (x3 ** 4) + 2 * (ex9 ** (np.sqrt(3))) * (-2 + (x1 ** 2) * (x3 ** 2))) + (ex7 ** -2) * (ex9 ** (-4 * (3 ** -0.5))) * (1 -2 * (ex9 ** (2 * (np.sqrt(3)))) * (x3 ** 2) * (x1 ** 2 + x3 ** 2) -2 * (ex9 ** (np.sqrt(3))) * (2 + x1 ** 4 + (x1 ** 2) * (x3 ** 2))))
    """

    x1,x3,ex7,ex9=tf.split(x, dim, axis=1)

    return 0.5 * (ex7 ** 6 -4 * (-1 + x1 ** 2 + x3 ** 2) + (ex7 ** -6) * ((x1 ** 2 + x3 ** 2) ** 2) + 2 * (ex7 ** -4) * (ex9 ** (-2 * (3 ** -0.5))) * ((ex9 ** (np.sqrt(3))) * (x1 ** 2) + x3 ** 2) + 2 * (ex7 ** 4) * (ex9 ** (-(3 ** -0.5))) * (x1 ** 2 + (ex9 ** (np.sqrt(3))) * (x3 ** 2)) + (ex7 ** 2) * (ex9 ** (-2 * (3 ** -0.5))) * (-2 + x1 ** 4 + (ex9 ** (2 * (np.sqrt(3)))) * (x3 ** 4) + 2 * (ex9 ** (np.sqrt(3))) * (-2 + (x1 ** 2) * (x3 ** 2))) + (ex7 ** -2) * (ex9 ** (-4 * (3 ** -0.5))) * (1 -2 * (ex9 ** (2 * (np.sqrt(3)))) * (x3 ** 2) * (x1 ** 2 + x3 ** 2) -2 * (ex9 ** (np.sqrt(3))) * (2 + x1 ** 4 + (x1 ** 2) * (x3 ** 2))))
