
import tensorflow as tf
import numpy as np

dim = 4

def V(x):
    """
    0.125 * (tf.exp(2 * x13 -4 * (3 ** -0.5) * x9)) * (4 * (tf.exp(4 * (3 ** -0.5) * x9)) + 16 * (tf.exp(2 * x13 + 4 * (3 ** -0.5) * x9)) + (tf.exp(2 * (np.sqrt(3)) * x9)) * (x11 ** 4) -4 * (tf.exp(5 * (3 ** -0.5) * x9)) * (4 + x11 ** 2) + 8 * (tf.exp(2 * (3 ** -0.5) * x9)) * (-1 + 4 * (x4 ** 2)) + 4 * (tf.exp((np.sqrt(3)) * x9)) * (-4 + x11 ** 2) * (1 + 4 * (x4 ** 2)) + 4 * ((1 + 4 * (x4 ** 2)) ** 2))
    """

    x4,x11,x13,x9=tf.split(x, dim, axis=1)

    return 0.125 * (tf.exp(2 * x13 -4 * (3 ** -0.5) * x9)) * (4 * (tf.exp(4 * (3 ** -0.5) * x9)) + 16 * (tf.exp(2 * x13 + 4 * (3 ** -0.5) * x9)) + (tf.exp(2 * (np.sqrt(3)) * x9)) * (x11 ** 4) -4 * (tf.exp(5 * (3 ** -0.5) * x9)) * (4 + x11 ** 2) + 8 * (tf.exp(2 * (3 ** -0.5) * x9)) * (-1 + 4 * (x4 ** 2)) + 4 * (tf.exp((np.sqrt(3)) * x9)) * (-4 + x11 ** 2) * (1 + 4 * (x4 ** 2)) + 4 * ((1 + 4 * (x4 ** 2)) ** 2))