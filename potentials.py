import tensorflow as tf 

def V_5d_1(x):
    """Constructed by Camille. Should be a line"""
    x1,x2,x3,x4,x5 = tf.split(x,5,axis=1)
    return 29 * (x1 ** 2) + 41.66666666666667 * (x1 ** 3) + 81 * (x1 ** 4) -36 * x1 * x2 + 540 * (x1 ** 3) * x2 + 20 * (x2 ** 2) + 1350 * (x1 ** 2) * (x2 ** 2) + 1500 * x1 * (x2 ** 3) + 625 * (x2 ** 4) + 32 * x1 * x3 -50 * (x1 ** 2) * x3 + 324 * (x1 ** 3) * x3 + 1620 * (x1 ** 2) * x2 * x3 + 2700 * x1 * (x2 ** 2) * x3 + 1500 * (x2 ** 3) * x3 + 20 * (x3 ** 2) + 20 * x1 * (x3 ** 2) + 486 * (x1 ** 2) * (x3 ** 2) + 1620 * x1 * x2 * (x3 ** 2) + 1350 * (x2 ** 2) * (x3 ** 2) -2.666666666666667 * (x3 ** 3) + 324 * x1 * (x3 ** 3) + 540 * x2 * (x3 ** 3) + 81 * (x3 ** 4) -4 * x1 * x4 -25 * (x1 ** 2) * x4 -540 * (x1 ** 3) * x4 + 40 * x2 * x4 -2700 * (x1 ** 2) * x2 * x4 -4500 * x1 * (x2 ** 2) * x4 -2500 * (x2 ** 3) * x4 + 40 * x3 * x4 + 20 * x1 * x3 * x4 -1620 * (x1 ** 2) * x3 * x4 -5400 * x1 * x2 * x3 * x4 -4500 * (x2 ** 2) * x3 * x4 -4 * (x3 ** 2) * x4 -1620 * x1 * (x3 ** 2) * x4 -2700 * x2 * (x3 ** 2) * x4 -540 * (x3 ** 3) * x4 + 40 * (x4 ** 2) + 5 * x1 * (x4 ** 2) + 1350 * (x1 ** 2) * (x4 ** 2) + 4500 * x1 * x2 * (x4 ** 2) + 3750 * (x2 ** 2) * (x4 ** 2) -2 * x3 * (x4 ** 2) + 2700 * x1 * x3 * (x4 ** 2) + 4500 * x2 * x3 * (x4 ** 2) + 1350 * (x3 ** 2) * (x4 ** 2) -0.3333333333333333 * (x4 ** 3) -1500 * x1 * (x4 ** 3) -2500 * x2 * (x4 ** 3) -1500 * x3 * (x4 ** 3) + 625 * (x4 ** 4) + 8 * x1 * x5 + 200 * (x1 ** 2) * x5 + 216 * (x1 ** 3) * x5 -16 * x2 * x5 + 1080 * (x1 ** 2) * x2 * x5 + 1800 * x1 * (x2 ** 2) * x5 + 1000 * (x2 ** 3) * x5 -8 * x3 * x5 -160 * x1 * x3 * x5 + 648 * (x1 ** 2) * x3 * x5 + 2160 * x1 * x2 * x3 * x5 + 1800 * (x2 ** 2) * x3 * x5 + 32 * (x3 ** 2) * x5 + 648 * x1 * (x3 ** 2) * x5 + 1080 * x2 * (x3 ** 2) * x5 + 216 * (x3 ** 3) * x5 -24 * x4 * x5 -80 * x1 * x4 * x5 -1080 * (x1 ** 2) * x4 * x5 -3600 * x1 * x2 * x4 * x5 -3000 * (x2 ** 2) * x4 * x5 + 32 * x3 * x4 * x5 -2160 * x1 * x3 * x4 * x5 -3600 * x2 * x3 * x4 * x5 -1080 * (x3 ** 2) * x4 * x5 + 8 * (x4 ** 2) * x5 + 1800 * x1 * (x4 ** 2) * x5 + 3000 * x2 * (x4 ** 2) * x5 + 1800 * x3 * (x4 ** 2) * x5 -1000 * (x4 ** 3) * x5 + 4 * (x5 ** 2) + 320 * x1 * (x5 ** 2) + 216 * (x1 ** 2) * (x5 ** 2) + 720 * x1 * x2 * (x5 ** 2) + 600 * (x2 ** 2) * (x5 ** 2) -128 * x3 * (x5 ** 2) + 432 * x1 * x3 * (x5 ** 2) + 720 * x2 * x3 * (x5 ** 2) + 216 * (x3 ** 2) * (x5 ** 2) -64 * x4 * (x5 ** 2) -720 * x1 * x4 * (x5 ** 2) -1200 * x2 * x4 * (x5 ** 2) -720 * x3 * x4 * (x5 ** 2) + 600 * (x4 ** 2) * (x5 ** 2) + 170.6666666666667 * (x5 ** 3) + 96 * x1 * (x5 ** 3) + 160 * x2 * (x5 ** 3) + 96 * x3 * (x5 ** 3) -160 * x4 * (x5 ** 3) + 16 * (x5 ** 4)

def V_10d_1(x):
    """Constructed by Camille. The polynomial of the valley is x1 + x2 + x3**2 + 4 x4**2 = 0"""
    x1,x2,x3,x4,x5, x6, x7, x8, x9, x10 = tf.split(x,10,axis=1)
    return 0.5 * (x1 ** 3) + x10 ** 4 + 1.5 * (x1 ** 2) * x2 + 1.5 * x1 * (x2 ** 2) + 0.5 * (x2 ** 3) + 1.5 * (x1 ** 2) * (x3 ** 2) + 3 * x1 * x2 * (x3 ** 2) + 1.5 * (x2 ** 2) * (x3 ** 2) + 1.5 * x1 * (x3 ** 4) + 1.5 * x2 * (x3 ** 4) + 0.5 * (x3 ** 6) + 6 * (x1 ** 2) * (x4 ** 2) + 12 * x1 * x2 * (x4 ** 2) + 6 * (x2 ** 2) * (x4 ** 2) + 12 * x1 * (x3 ** 2) * (x4 ** 2) + 12 * x2 * (x3 ** 2) * (x4 ** 2) + 6 * (x3 ** 4) * (x4 ** 2) + 24 * x1 * (x4 ** 4) + 24 * x2 * (x4 ** 4) + 24 * (x3 ** 2) * (x4 ** 4) + 32 * (x4 ** 6) + x5 ** 4 + x6 ** 4 + x7 ** 4 + x8 ** 4 + x9 ** 4

def V_10d_2(x):
    """Same as before but there is an change of variables in it"""
    x1,x2,x3,x4,x5, x6, x7, x8, x9, x10 = tf.split(x, 10, axis = 1)
    return (x3 + x5 + x7) ** 4 + (-x1 + x10 -x3 + x4 -x5 -x7 + x8) ** 4 + 0.5 * ((x10 -x2 + x5 -x6 -x8 + 4 * ((x1 + x2 -x4 -x6 -x7 + x8) ** 2) + (-x1 + x2 -x5 -x6 + x7 + x8 -x9) ** 2) ** 3) + (-x3 -x4 + x5 -x6 -x9) ** 4 + (-x1 + x2 + x3 + x4 + x5 -x6 -x7 -x8 -x9) ** 4 + (x1 + x10 -x2 -x6 + x8 -x9) ** 4 + (x1 + x3 + x4 + x5 + x6 + x8 + x9) ** 4

def V10dscrambled2(x):
    """Same as before but there is another change of variables in it"""
    x1,x2,x3,x4,x5, x6, x7, x8, x9, x10 = tf.split(x, 10, axis = 1)
    return x10 ** 4 + x6 ** 4 + 0.5 * ((x1 + 2 * x2 + x3 ** 2 -2 * x4 + 4 * (x4 ** 2) + x6) ** 3) + (x5 + x6 -x7) ** 4 + x7 ** 4 + x9 ** 4 + (x10 + 8 * x9) ** 4

def V10dscrambled3(x):
    """Same as before but there is another change of variables in it"""
    x1,x2,x3,x4,x5, x6, x7, x8, x9, x10 = tf.split(x, 10, axis = 1)
    return x10 ** 4 + x6 ** 4 + 0.5 * ((x1 + 2 * x2 -2 * x4 + 4 * (x4 ** 2) + x6 + (-2 * x2 -x3 + 7 * x5 + x6) ** 2) ** 3) + (x5 + x6 -x7) ** 4 + x7 ** 4 + x9 ** 4 + (x1 + x10 + 8 * x9) ** 4

def V13d_sugra_no13(x):
    x13=0
    x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12=tf.split(x,12, axis=1)
    return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))

def V13d_sugra(x):
    x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13=tf.split(x,13, axis=1)
    return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))

def V3d_sugra(x):
    #x1 = x7 de 13d
    #x2 = x9 de 13d 
    #x3 = x2 de 13d 
    x1,x2,x3=tf.split(x, 3, axis=1)
    return 0.5 * (4 + tf.exp(6 * x1) + tf.exp(-2 * x1 -4 * (3 ** -0.5) * x2) -2 * (tf.exp(2 * x1 -2 * (3 ** -0.5) * x2)) -4 * (tf.exp(-2 * x1 -((3 ** -0.5) * x2))) -4 * (tf.exp(2 * x1 + (3 ** -0.5) * x2)) -4 * (x3 ** 2) + 2 * (tf.exp(-4 * x1 -2 * (3 ** -0.5) * x2)) * (x3 ** 2) + 2 * (tf.exp(4 * x1 + 2 * (3 ** -0.5) * x2)) * (x3 ** 2) + (tf.exp(-6 * x1)) * (x3 ** 4) -2 * (tf.exp(-2 * x1 + 2 * (3 ** -0.5) * x2)) * (x3 ** 4) + (tf.exp(2 * x1 + 4 * (3 ** -0.5) * x2)) * (x3 ** 4))

def V4d_sugra_2_4_8_10(x):
    #x1 = 0
    #x3 = 0
    #x5 = 0 
    #x6 = 0 
    #x7 = 0 
    #x9 = 0 
    #x11 = 0
    #x12 = 0 
    #x13 = 0 
    #x2,x4,x8,x10=tf.split(x,4, axis=1)
    #return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))
    x2,x4,x8,x10 = tf.split(x,4,axis=1)
    return 2 + tf.exp(-2 * x8) + x10 ** 2 + x2 ** 4 + 0.25 * (tf.exp(2 * x8)) * \
((2 + x10 ** 2) ** 2) * (1 + x2 ** 4) + 4 * (x4 ** 2) + x4 ** 4 -2 * \
(x2 ** 2) * (2 + (tf.sqrt(2.)) * x10 * x4) + 2 * (tf.exp(-x8)) * (-2 + \
x2 ** 2 -(x4 ** 2)) -((tf.exp(x8)) * (2 + x10 ** 2) * (2 + x2 ** 4 + \
x4 ** 2 -((x2 ** 2) * (1 + x4 ** 2))))

def V4d_sugra_1_2_4_10(x):
    x1,x2,x4,x10 = tf.split(x,4,axis=1)
    return -4 -((tf.sqrt(2.)) * x1 * (x10 ** 3) * (x2 ** 3)) + 0.25 * (x10 ** 4) \
* (1 + x2 ** 4) + 2 * (x1 ** 2 + x2 ** 2) * (x4 ** 2) + x4 ** 4 -2 * \
(tf.sqrt(2.)) * x10 * x4 * (-(x1 ** 2) + x2 ** 2 + x1 * x2 * x4) + \
(x10 ** 2) * (x2 ** 2 + (x1 ** 2) * (1 + 2 * (x2 ** 2)) -2 * x1 * x2 \
* x4 + (-1 + x2 ** 2) * (x4 ** 2))

def V4d_sugra_1_2_4_8(x):
    x1,x2,x4,x8 = tf.split(x,4,axis = 1)
    return 2 + x1 ** 4 + (tf.exp(-2 * x8)) * (1 + x1 ** 4) -4 * (x2 ** 2) + x2 ** \
4 + 4 * (x1 ** 2) * (-1 + x2 ** 2) + (tf.exp(2 * x8)) * (1 + x2 ** 4) \
+ 4 * (x4 ** 2) + x4 ** 4 + 2 * (tf.exp(-x8)) * (-2 + x2 ** 2 -((x1 ** \
2) * (-1 + x1 ** 2 + x2 ** 2)) + 2 * x1 * x2 * x4 + (-1 + x1 ** 2) * \
(x4 ** 2)) -2 * (tf.exp(x8)) * (2 + x2 ** 4 + (x1 ** 2) * (-1 + x2 ** \
2) + 2 * x1 * x2 * x4 + x4 ** 2 -((x2 ** 2) * (1 + x4 ** 2)))

def V4d_sugra_1_5_9_12(x):
    x2 = 0.
    x3 = 0.
    x4 = 0.
    x6 = 0. 
    x7 = 0. 
    x8 = 0. 
    x10 = 0.
    x11 = 0.
    x13 = 0. 
    x1,x5,x9,x12=tf.split(x,4, axis=1)
    return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))

def V4d_sugra_3_5_8_11(x):
    x1 = 0.
    x2 = 0.
    x4 = 0.
    x6 = 0. 
    x7 = 0. 
    x9 = 0.
    x10 = 0.
    x12 = 0. 
    x13 = 0. 
    x3,x5,x8,x11=tf.split(x,4, axis=1)
    return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))

def V5d_sugra_1_2_4_8_10(x):
    #x3 = 0. 
    #x5 = 0.
    #x6 = 0. 
    #x7 = 0. 
    #x9 = 0.
    #x11 = 0.
    #x12 = 0. 
    #x13 = 0. 
    x1,x2,x4,x8,x10=tf.split(x,5, axis=1)
    #return 0.001953125 * (tf.exp(2 * x13 -6 * x7 -2 * x8 -4 * (3 ** -0.5) * x9)) * (1024 * (tf.exp(2 * x13 + 6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 256 * (tf.exp(12 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) + 512 * (tf.exp(10 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (x1 ** 2) + 256 * (tf.exp(8 * x7 + 2 * (3 ** -0.5) * x9)) * (x1 ** 4) -512 * (tf.sqrt(2.)) * (tf.exp(10 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * x1 * x10 * x2 -512 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + x8 + 2 * (3 ** -0.5) * x9)) * (x1 ** 3) * x10 * x2 + 256 * (tf.exp(10 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (2 + x10 ** 2) * (x2 ** 2) -256 * (tf.sqrt(2.)) * (tf.exp(8 * x7 + 3 * x8 + 2 * (3 ** -0.5) * x9)) * x1 * x10 * (2 + x10 ** 2) * (x2 ** 3) + 64 * (tf.exp(8 * x7 + 4 * x8 + 2 * (3 ** -0.5) * x9)) * ((2 + x10 ** 2) ** 2) * (x2 ** 4) -256 * (tf.exp(10 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -256 * (tf.exp(8 * x7 + 0.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 -128 * (tf.exp(10 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 -64 * (tf.exp(8 * x7 + 1.166666666666667 * (3 * x8 + (tf.sqrt(3.)) * x9))) * (2 + x10 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 ** 3) * x3 + 32 * (tf.exp(2 * (5 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) -16 * (tf.exp(8 * x7 + 1.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * x1 * (16 * (tf.sqrt(2.)) * (x11 ** 3) -24 * x10 * (x11 ** 2) * x12 -(x10 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2))) + 2 * (tf.sqrt(2.)) * x11 * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 3) -8 * (tf.exp(8 * x7 + 2.5 * x8 + 6.5 * (3 ** -0.5) * x9)) * (-12 * (x10 ** 3) * x11 * (x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * (x12 ** 3) + 32 * (tf.sqrt(2.)) * x12 * (2 + x11 ** 2 + x12 ** 2) -32 * x10 * x11 * (2 + x11 ** 2 + 2 * (x12 ** 2)) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (4 + 6 * (x11 ** 2) + 3 * (x12 ** 2))) * x2 * (x3 ** 3) + (tf.exp(8 * x7 + 2 * x8 + 8 * (3 ** -0.5) * x9)) * (64 * (x11 ** 4) -64 * (tf.sqrt(2.)) * x10 * (x11 ** 3) * x12 -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (16 + (8 + x10 ** 2) * (x12 ** 2)) + (16 + (8 + x10 ** 2) * (x12 ** 2)) ** 2 + 16 * (x11 ** 2) * (16 + (8 + 3 * (x10 ** 2)) * (x12 ** 2))) * (x3 ** 4) + 2048 * (tf.exp(6 * x7 + x8 + (3 ** -0.5) * x9)) * (x1 ** 2) * (x4 ** 2) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 2 * x8 + (3 ** -0.5) * x9)) * x1 * x10 * x2 * (x4 ** 2) + 1024 * (tf.exp(6 * x7 + 3 * x8 + (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (x2 ** 2) * (x4 ** 2) + 256 * (tf.exp(4 * x7 + 2 * x8)) * ((1 + 4 * (x4 ** 2)) ** 2) + 256 * (tf.exp(8 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * (-2 + (x1 ** 2) * (2 + 3 * (x10 ** 2)) * (x2 ** 2) + 8 * (x4 ** 2)) -2048 * (tf.sqrt(2.)) * (tf.exp(6 * x7 + 0.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (x1 ** 2) * x12 * x4 * x5 -2048 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9))) * x12 * x4 * (1 + 4 * (x4 ** 2)) * x5 + 1024 * (tf.exp(6 * x7 + 4 * (3 ** -0.5) * x9)) * (x1 ** 2) * (2 + x12 ** 2) * (x5 ** 2) -512 * (tf.exp(6 * x7 + 0.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (2 + x12 ** 2) * x3 * (x5 ** 2) + 64 * (tf.exp(6 * x7 + x8 + 7 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * (16 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x3 ** 2) * (x5 ** 2) -128 * (tf.exp(8 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * ((x1 ** 2) * (-12 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 + 16 * (tf.sqrt(2.)) * x12 * x4 * x5) -1024 * (tf.sqrt(2.)) * (tf.exp(0.5 * (8 * x7 + x8 + 3 * (tf.sqrt(3.)) * x9))) * x12 * (2 + x12 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) + 64 * (tf.exp(4 * x7 + 2 * (tf.sqrt(3.)) * x9)) * ((2 + x12 ** 2) ** 2) * ((1 + 4 * (x5 ** 2)) ** 2) + 32 * (tf.exp(8 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * x11 * x12 * (x3 ** 2) + 8 * (-2 + (x1 ** 2) * (2 + 3 * (x11 ** 2)) * (x3 ** 2) + 8 * (x5 ** 2)) + (x12 ** 2) * (-8 + (x1 ** 2) * (8 + 3 * (x10 ** 2)) * (x3 ** 2) + 32 * (x5 ** 2))) + 512 * (tf.exp(6 * x7 + 3.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (x2 ** 2) * x4 * x6 + 1024 * (tf.exp(0.5 * (8 * x7 + 5 * x8 + (tf.sqrt(3.)) * x9))) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * (1 + 4 * (x4 ** 2)) * x6 -32 * (tf.exp(6 * x7 + 2 * x8 + 7 * (3 ** -0.5) * x9)) * ((tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) * (4 + x12 ** 2) -4 * (x10 ** 2) * x11 * x12 * (8 + x12 ** 2) + 32 * x11 * x12 * (2 + x11 ** 2 + x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (8 + 6 * (x12 ** 2) + x12 ** 4 -((x11 ** 2) * (-4 + x12 ** 2)))) * (x3 ** 2) * x5 * x6 -256 * (tf.exp(4 * x7 + x8 + 2 * (tf.sqrt(3.)) * x9)) * (2 + x12 ** 2) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * (1 + 4 * (x5 ** 2)) * x6 + 64 * (tf.exp(6 * x7 + 4 * x8 + 4 * (3 ** -0.5) * x9)) * (2 + x10 ** 2) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x2 ** 2) * (x6 ** 2) -32 * (tf.exp(6 * x7 + 3.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * (32 * (tf.sqrt(2.)) * (2 + x11 ** 2) * x12 -32 * x10 * x11 * (2 + x11 ** 2 -(x12 ** 2)) + 4 * (x10 ** 3) * x11 * (-8 + x12 ** 2) + (tf.sqrt(2.)) * (x10 ** 4) * x12 * (8 + x12 ** 2) + 4 * (tf.sqrt(2.)) * (x10 ** 2) * x12 * (12 -2 * (x11 ** 2) + x12 ** 2)) * x2 * x3 * (x6 ** 2) + 8 * (tf.exp(6 * x7 + 3 * x8 + 7 * (3 ** -0.5) * x9)) * (-32 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 + 32 * (tf.sqrt(2.)) * x10 * x11 * (x12 ** 3) + (x10 ** 4) * (x12 ** 2) * (8 + x12 ** 2) + 64 * (2 + x11 ** 2) * (2 + x11 ** 2 + x12 ** 2) + 8 * (x10 ** 2) * (16 + 12 * (x12 ** 2) + x12 ** 4 -2 * (x11 ** 2) * (-4 + x12 ** 2))) * (x3 ** 2) * (x6 ** 2) + 512 * (tf.exp(2 * x7 + 2 * x8 + 2 * (3 ** -0.5) * x9)) * ((x3 + 4 * x3 * (x4 ** 2) -4 * x2 * x4 * x5 + 4 * x1 * x4 * x6) ** 2) -128 * (tf.exp(8 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (x1 * (2 * (tf.sqrt(2.)) * (2 + 3 * (x10 ** 2)) * x11 -(x10 * (10 + 3 * (x10 ** 2)) * x12)) * (x2 ** 2) * x3 -8 * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * x4 * x6) -32 * (tf.exp(8 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (x1 * (-32 * x11 * x12 -24 * (x10 ** 2) * x11 * x12 + 3 * (tf.sqrt(2.)) * (x10 ** 3) * (x12 ** 2) + 8 * (tf.sqrt(2.)) * x10 * (2 + 3 * (x11 ** 2) + 2 * (x12 ** 2))) * x2 * (x3 ** 2) + 16 * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * x5 * x6) + 64 * (tf.exp(4 * x7 + 3.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * (16 * (tf.sqrt(2.)) * (x11 ** 3) + 24 * x10 * (x11 ** 2) * x12 + x10 * x12 * (16 + (x10 ** 2) * (8 + x12 ** 2)) + 2 * (tf.sqrt(2.)) * x11 * (16 + (x10 ** 2) * (8 + 3 * (x12 ** 2)))) * x4 * x6 * (1 + 4 * (x6 ** 2)) -32 * (tf.exp(4 * x7 + 3 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (32 * x11 * (2 + x11 ** 2) * x12 + 4 * (x10 ** 2) * x11 * x12 * (16 + 3 * (x12 ** 2)) + (tf.sqrt(2.)) * (x10 ** 3) * (32 + 12 * (x12 ** 2) + x12 ** 4) + 8 * (tf.sqrt(2.)) * x10 * (2 * (4 + x12 ** 2) + (x11 ** 2) * (4 + 3 * (x12 ** 2)))) * x5 * x6 * (1 + 4 * (x6 ** 2)) + (tf.exp(4 * x7 + 4 * x8 + 2 * (tf.sqrt(3.)) * x9)) * (64 * ((2 + x11 ** 2) ** 2) + 64 * (tf.sqrt(2.)) * x10 * x11 * (2 + x11 ** 2) * x12 + 8 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (8 + x12 ** 2) + (x10 ** 4) * ((8 + x12 ** 2) ** 2) + 16 * (x10 ** 2) * (2 * (8 + x12 ** 2) + (x11 ** 2) * (8 + 3 * (x12 ** 2)))) * ((1 + 4 * (x6 ** 2)) ** 2) + 32 * (tf.exp(2 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (8 * (2 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * ((x1 + 4 * x3 * x4 * x6 -4 * x2 * x5 * x6 + 4 * x1 * (x6 ** 2)) ** 2) + 256 * (tf.exp(2 * x7 + x8 + 5 * (3 ** -0.5) * x9)) * (2 + x12 ** 2) * ((x2 + 4 * x2 * (x5 ** 2) -4 * x5 * (x3 * x4 + x1 * x6)) ** 2) + 1024 * (tf.exp(6 * x7 + 1.5 * x8 + 2.5 * (3 ** -0.5) * x9)) * x1 * x4 * (2 * (tf.sqrt(2.)) * x11 * (-(x3 * x4) + x1 * x6) + x10 * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6)) -512 * (tf.exp(6 * x7 + 0.8333333333333333 * (3 * x8 + (tf.sqrt(3.)) * x9))) * x2 * x4 * (4 * (tf.sqrt(2.)) * x12 * (x3 * x4 + x2 * x5) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x3 * x4 + 2 * x2 * x5 + 2 * x1 * x6) + x10 * x11 * (-4 * x3 * x4 + 8 * x1 * x6)) -128 * (tf.exp(6 * x7 + 1.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x5 * (-8 * x10 * x11 * (x12 ** 2) * (x3 * x4 + x2 * x5) -16 * x10 * x11 * (x2 * x5 + 2 * x1 * x6) + (tf.sqrt(2.)) * (x12 ** 3) * ((8 + x10 ** 2) * x3 * x4 + 2 * (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2) * x6) + 4 * (tf.sqrt(2.)) * x12 * (2 * (2 + x11 ** 2) * x3 * x4 + (4 + x10 ** 2) * x2 * x5 + 2 * x1 * (x10 ** 2 -2 * (x11 ** 2)) * x6)) -512 * (tf.exp(4 * x7 + 2 * x8 + (tf.sqrt(3.)) * x9)) * (4 * x11 * x12 * (1 + 12 * (x4 ** 2)) * x5 * x6 + (tf.sqrt(2.)) * x1 * x10 * (x2 * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 2) * x3 * x4 * x5 + (x2 ** 3) * (-1 + 4 * (x5 ** 2)) + 2 * x3 * x6) -2 * (tf.sqrt(2.)) * (x1 ** 2) * x10 * (x4 -4 * x2 * x3 * x4 * x6 + 4 * (x2 ** 2) * x5 * x6) + (tf.sqrt(2.)) * x10 * (2 * (x2 ** 2) * x4 + 2 * x2 * x3 * x5 + (-4 + x12 ** 2 + 16 * (x4 ** 2) + 12 * (x12 ** 2) * (x4 ** 2)) * x5 * x6) + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 * (-1 + 4 * (x6 ** 2))) + 256 * (tf.exp(2 * x8 + 4 * (3 ** -0.5) * x9)) * (((x3 ** 2) * (1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 2) * (1 + 4 * (x6 ** 2))) ** 2) + 256 * (tf.exp(4 * x7 + x8 + (tf.sqrt(3.)) * x9)) * (-2 -8 * (x4 ** 2) -8 * (x5 ** 2) + 32 * (x4 ** 2) * (x5 ** 2) + 8 * x1 * (x2 * x4 + x3 * x5) + 2 * (x1 ** 2) * ((x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * x2 * x3 * x4 * x5 + (x2 ** 2) * (-1 + 4 * (x5 ** 2))) + (x12 ** 2) * (1 + 4 * (x5 ** 2) + (x4 ** 2) * (4 + 48 * (x5 ** 2))) + 16 * (x1 ** 3) * (x3 * x4 -(x2 * x5)) * x6 + (x1 ** 4) * (-2 + 8 * (x6 ** 2))) + 128 * (tf.exp(6 * x7 + 2 * x8 + 4 * (3 ** -0.5) * x9)) * ((x3 ** 2) * (-8 + (32 + 8 * (x11 ** 2) -4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (8 + x10 ** 2) * (x12 ** 2)) * (x4 ** 2)) -8 * (4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 -4 * (x12 ** 2) -((x10 ** 2) * (x12 ** 2))) * x2 * x3 * x4 * x5 + 4 * (x2 ** 2) * (-2 + ((x10 ** 2) * (2 + x12 ** 2) + 2 * (4 + x12 ** 2)) * (x5 ** 2)) -4 * x1 * ((-8 + 8 * (x11 ** 2) -((x10 ** 2) * (x12 ** 2))) * x3 * x4 -2 * (-4 + 2 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (4 + x12 ** 2)) * x2 * x5) * x6 + (x1 ** 2) * (-8 + (8 * (4 + x11 ** 2) + 4 * (tf.sqrt(2.)) * x10 * x11 * x12 + (x10 ** 2) * (8 + x12 ** 2)) * (x6 ** 2))) -512 * (tf.sqrt(2.)) * (tf.exp(2 * x7 + 1.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * x12 * (4 * (x2 ** 2) * x4 * x5 * (1 + 4 * (x5 ** 2)) -(x2 * (x3 + 4 * x3 * (x5 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x5 ** 2)) + 4 * x1 * x4 * (1 + 8 * (x5 ** 2)) * x6)) + 4 * x5 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) + x1 * x3 * (1 + 8 * (x4 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * (x6 ** 2))) -256 * (tf.exp(4 * x7 + 1.5 * (x8 + (tf.sqrt(3.)) * x9))) * (-2 * (x1 ** 2) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * (x5 -4 * (x3 ** 2) * x4 * x6 + 4 * x2 * x3 * x5 * x6) + 4 * (tf.sqrt(2.)) * x11 * (x2 * x3 * x4 + (x3 ** 2) * x5 -(x4 * (-2 + x12 ** 2 + 8 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6)) -2 * x10 * x12 * (x2 * x3 * x4 + (x3 ** 2) * x5 + x4 * (6 + x12 ** 2 + 40 * (x5 ** 2) + 12 * (x12 ** 2) * (x5 ** 2)) * x6) + (x1 ** 3) * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * x3 * (-1 + 4 * (x6 ** 2)) + x1 * (2 * (tf.sqrt(2.)) * x11 -(x10 * x12)) * ((x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 2) * x3 * (-1 + 4 * (x5 ** 2)) -2 * x2 * (4 * (x3 ** 2) * x4 * x5 + x6))) -512 * (tf.exp(6 * x7 + x8 + 4 * (3 ** -0.5) * x9)) * x1 * x5 * (x11 * x12 * (-8 * x3 * x4 + 4 * x1 * x6) + (tf.sqrt(2.)) * x10 * (4 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6))) -128 * (tf.exp(6 * x7 + 3 * x8 + 4 * (3 ** -0.5) * x9)) * x2 * x6 * (16 * x11 * x12 * (2 * x3 * x4 + x2 * x5) + 8 * (x10 ** 2) * x11 * x12 * (x2 * x5 + x1 * x6) + (tf.sqrt(2.)) * (x10 ** 3) * (8 * (x2 * x5 + x1 * x6) + (x12 ** 2) * (2 * x3 * x4 + 2 * x2 * x5 + x1 * x6)) + 4 * (tf.sqrt(2.)) * x10 * (2 * (x12 ** 2) * x3 * x4 + 4 * x2 * x5 + (x12 ** 2) * x2 * x5 + 4 * x1 * x6 + (x11 ** 2) * (-4 * x3 * x4 + 2 * x1 * x6))) + 64 * (tf.exp(6 * x7 + 2.5 * x8 + 5.5 * (3 ** -0.5) * x9)) * x3 * x6 * (16 * (tf.sqrt(2.)) * (x11 ** 3) * (x3 * x4 -(x1 * x6)) -8 * x10 * (x11 ** 2) * x12 * (x3 * x4 + 4 * x2 * x5 + x1 * x6) + x10 * x12 * ((16 + (8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 4 * (4 + x10 ** 2) * (4 + x12 ** 2) * x2 * x5 + x1 * (16 + (x10 ** 2) * (8 + x12 ** 2)) * x6) -2 * (tf.sqrt(2.)) * x11 * ((-16 + (-8 + x10 ** 2) * (x12 ** 2)) * x3 * x4 + 16 * (-((x12 ** 2) * x2 * x5) + x1 * x6) + (x10 ** 2) * (16 * x2 * x5 -(x1 * (-8 + x12 ** 2) * x6)))) + 16 * (tf.exp(8 * x7 + 3 * x8 + 5 * (3 ** -0.5) * x9)) * (-12 * (tf.sqrt(2.)) * (x10 ** 3) * x11 * x12 * (x2 ** 2) * (x3 ** 2) + 3 * (x10 ** 4) * (x12 ** 2) * (x2 ** 2) * (x3 ** 2) -8 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 5 * (x2 ** 2) * (x3 ** 2) -4 * (x6 ** 2)) + 16 * (-2 + (2 + 3 * (x12 ** 2)) * (x2 ** 2) * (x3 ** 2) + 8 * (x6 ** 2) + (x11 ** 2) * (-1 + (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2))) + 2 * (x10 ** 2) * (-8 + 4 * (2 + 3 * (x11 ** 2)) * (x2 ** 2) * (x3 ** 2) + 32 * (x6 ** 2) + (x12 ** 2) * (-1 + 13 * (x2 ** 2) * (x3 ** 2) + 4 * (x6 ** 2)))) + 256 * (tf.exp(2 * x7 + 2.5 * x8 + 3.5 * (3 ** -0.5) * x9)) * (2 * (tf.sqrt(2.)) * x11 + x10 * x12) * (4 * ((x3 ** 2) * (x4 + 4 * (x4 ** 3)) -(x2 * x3 * (1 + 8 * (x4 ** 2)) * x5) + 4 * (x2 ** 2) * x4 * (x5 ** 2)) * x6 + 4 * (x1 ** 2) * x4 * x6 * (1 + 4 * (x6 ** 2)) + x1 * (x3 + 4 * x3 * (x6 ** 2) + 4 * x3 * (x4 ** 2) * (1 + 8 * (x6 ** 2)) -4 * x2 * x4 * x5 * (1 + 8 * (x6 ** 2)))) -128 * (tf.exp(2 * x7 + 2 * x8 + 5 * (3 ** -0.5) * x9)) * (4 * x11 * x12 + (tf.sqrt(2.)) * x10 * (4 + x12 ** 2)) * (4 * (4 * (x3 ** 2) * (x4 ** 2) * x5 -(x2 * x3 * x4 * (1 + 8 * (x5 ** 2))) + (x2 ** 2) * (x5 + 4 * (x5 ** 3))) * x6 + 4 * (x1 ** 2) * x5 * x6 * (1 + 4 * (x6 ** 2)) -(x1 * (x2 + 4 * x2 * (x6 ** 2) -4 * x3 * x4 * x5 * (1 + 8 * (x6 ** 2)) + 4 * x2 * (x5 ** 2) * (1 + 8 * (x6 ** 2))))) -128 * (tf.exp(4 * x7 + 2.5 * x8 + 1.5 * (tf.sqrt(3.)) * x9)) * ((x1 ** 2) * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * x2 * x3 * (-1 + 4 * (x6 ** 2)) -2 * x1 * (-4 * x10 * x11 + 4 * (tf.sqrt(2.)) * x12 + (tf.sqrt(2.)) * (x10 ** 2) * x12) * (x2 * x5 -4 * x2 * (x3 ** 2) * x4 * x6 + x3 * (x4 + 4 * (x2 ** 2) * x5 * x6)) + (tf.sqrt(2.)) * (x10 ** 2) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x6 * (x3 ** 2 + 32 * x4 * x5 * x6) + (x12 ** 2) * x4 * x5 * (1 + 12 * (x6 ** 2))) + 4 * x10 * x11 * (x2 * (x3 ** 3) * (1 -4 * (x4 ** 2)) + (x2 ** 3) * (x3 -4 * x3 * (x5 ** 2)) -2 * (x3 ** 2) * x6 + 2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (4 + x12 ** 2 + 16 * (x6 ** 2) + 12 * (x12 ** 2) * (x6 ** 2))) + 4 * (tf.sqrt(2.)) * x12 * (x2 * (x3 ** 3) * (-1 + 4 * (x4 ** 2)) + (x2 ** 3) * x3 * (-1 + 4 * (x5 ** 2)) + 2 * (x3 ** 2) * x6 -2 * (x2 ** 2) * (4 * (x3 ** 2) * x4 * x5 + x6) + 2 * x4 * x5 * (-2 + 8 * (x6 ** 2) + (x11 ** 2) * (1 + 12 * (x6 ** 2))))) + 32 * (tf.exp(4 * x7 + 3 * x8 + (tf.sqrt(3.)) * x9)) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))) + 8 * (2 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (8 * (-1 -4 * (x4 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x4 ** 2)) -8 * (x2 ** 3) * x3 * x4 * x5 + (x2 ** 4) * (-1 + 4 * (x5 ** 2)) + 4 * x2 * x3 * x6 -4 * (x6 ** 2) + 16 * (x4 ** 2) * (x6 ** 2) -4 * x1 * x2 * (x4 -2 * x2 * x3 * x4 * x6 + 2 * (x2 ** 2) * x5 * x6) + (x1 ** 2) * (x2 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x4 ** 2) * (4 + 48 * (x6 ** 2))))) + 16 * (tf.exp(2 * (2 * x7 + x8 + (tf.sqrt(3.)) * x9))) * (4 * (tf.sqrt(2.)) * x10 * x11 * x12 * (2 * (3 + x3 ** 4 -4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (1 -4 * (x5 ** 2)) + 12 * (x6 ** 2) + 80 * (x5 ** 2) * (x6 ** 2) + 4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) + 4 * x1 * x3 * (x5 -2 * (x3 ** 2) * x4 * x6 + 2 * x2 * x3 * x5 * x6) + (x1 ** 2) * (x3 ** 2) * (1 -4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + (x10 ** 2) * (2 * (x12 ** 2) * (3 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) + 12 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 + 12 * (x6 ** 2) + 208 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + 16 * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2))) + (x12 ** 4) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))) + 8 * (2 * (2 + x12 ** 2) * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x11 ** 2) * (2 * (-1 -(x3 ** 4) + 4 * (x3 ** 4) * (x4 ** 2) -4 * (x5 ** 2) + (x2 ** 2) * (x3 ** 2) * (-1 + 4 * (x5 ** 2)) + 8 * x1 * (x3 ** 3) * x4 * x6 -4 * (x6 ** 2) + 16 * (x5 ** 2) * (x6 ** 2) -4 * x2 * x3 * (2 * (x3 ** 2) * x4 * x5 + x6) -4 * x1 * x3 * x5 * (1 + 2 * x2 * x3 * x6) + (x1 ** 2) * (x3 ** 2) * (-1 + 4 * (x6 ** 2))) + (x12 ** 2) * (1 + 4 * (x6 ** 2) + (x5 ** 2) * (4 + 48 * (x6 ** 2)))))))
    return 2 -4 * (x1 ** 2) + x1 ** 4 + (tf.exp(-2 * x8)) * (1 + x1 ** 4) -4 * \
(x2 ** 2) + 4 * (x1 ** 2) * (x2 ** 2) + x2 ** 4 + (x10 ** 2) * (1 + 3 \
* (x1 ** 2) * (x2 ** 2)) + 0.25 * (tf.exp(2 * x8)) * ((2 + x10 ** 2) ** \
2) * (1 + x2 ** 4) + 4 * (x4 ** 2) + x4 ** 4 + 2 * (tf.sqrt(2.)) * x10 \
* ((x1 ** 3) * x2 + (x1 ** 2) * x4 -((x2 ** 2) * x4) + x1 * x2 * (x2 \
-x4) * (x2 + x4)) -((tf.exp(x8)) * (2 + x10 ** 2) * (2 -(x1 ** 2) + \
(tf.sqrt(2.)) * x1 * x10 * (x2 ** 3) + x2 ** 4 + 2 * x1 * x2 * x4 + x4 \
** 2 + (x2 ** 2) * (-1 + x1 ** 2 -(x4 ** 2)))) -2 * (tf.exp(-x8)) * \
(2 + x1 ** 4 + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 -(x2 ** 2) -2 * x1 \
* x2 * x4 + x4 ** 2 + (x1 ** 2) * (-1 + x2 ** 2 -(x4 ** 2)))

def V5d_sugra_3_5_7_9_11(x):
    x3,x5,x7,x9,x11=tf.split(x,5, axis=1)
    return 4 -4 * (tf.exp(-2 * x7 -((3 ** -0.5) * x9))) -4 * (tf.exp(2 * x7 + \
(3 ** -0.5) * x9)) + 0.25 * (tf.exp(2 * x7 + 4 * (3 ** -0.5) * x9)) * \
((2 + x11 ** 2) ** 2) + (x11 ** 2) * (x3 ** 2) -2 * (tf.sqrt(2.)) * \
(tf.exp(-2 * x7 + 0.5 * (3 ** -0.5) * x9)) * x11 * (x3 ** 2) * x5 + \
(tf.exp(-4 * x7 + (3 ** -0.5) * x9)) * (2 + x11 ** 2) * (x3 ** 2) * \
(x5 ** 2) + (tf.exp(-6 * x7)) * ((1 + x5 ** 2) ** 2) + 0.25 * \
(tf.exp(-2 * x7 + 2 * (3 ** -0.5) * x9)) * ((x11 ** 4) * (x3 ** 4) -8 \
* (1 + x5 ** 2) -4 * (x11 ** 2) * (1 + x5 ** 2))

def V5d_sugra_1_3_4_8_10(x):
    x1,x3,x4,x8,x10=tf.split(x,5, axis=1)
    return 2 -4 * (x1 ** 2) + x1 ** 4 + x10 ** 2 + (2 + x1 ** 2) * (-2 + x10 ** \
2) * (x3 ** 2) + (-2 + x10 ** 2) * (x3 ** 4) + 0.25 * (tf.exp(2 * \
x8)) * ((2 + x10 ** 2) ** 2) * ((1 + x3 ** 2) ** 2) + (tf.exp(-2 * \
x8)) * (1 + 2 * (x3 ** 2) + (x1 ** 2 + x3 ** 2) ** 2) + 2 * \
(tf.sqrt(2.)) * (x1 ** 2) * x10 * x4 + 4 * (x4 ** 2) + x4 ** 4 + \
(tf.exp(x8)) * (2 + x10 ** 2) * (-2 + (x1 ** 2) * (1 + x3 ** 2) -(x4 ** \
2)) -2 * (tf.exp(-x8)) * (2 + x1 ** 4 + x4 ** 2 + (x1 ** 2) * (-1 + \
x3 ** 2 -(x4 ** 2)))

def V6d_sugra_1_2_3_4_8_10(x):
    x1,x2,x3,x4,x8,x10=tf.split(x,6,axis=1)
    return 2 -4 * (x1 ** 2) + x1 ** 4 -4 * (x2 ** 2) + 4 * (x1 ** 2) * (x2 ** \
2) + x2 ** 4 -4 * (x3 ** 2) -2 * (x1 ** 2) * (x3 ** 2) -2 * (x2 ** 2) \
* (x3 ** 2) -2 * (x3 ** 4) + (x10 ** 2) * (1 + 3 * (x1 ** 2) * (x2 ** \
2) + (2 + x1 ** 2 + x2 ** 2) * (x3 ** 2) + x3 ** 4) + (tf.exp(-2 * \
x8)) * (1 + 2 * (x3 ** 2) + (x1 ** 2 + x3 ** 2) ** 2) + 0.25 * \
(tf.exp(2 * x8)) * ((2 + x10 ** 2) ** 2) * (1 + 2 * (x3 ** 2) + (x2 ** \
2 + x3 ** 2) ** 2) + 4 * (x4 ** 2) + x4 ** 4 + 2 * (tf.sqrt(2.)) * x10 \
* (x1 * x2 * (x1 ** 2 + x2 ** 2 + 2 * (x3 ** 2)) + (x1 -x2) * (x1 + \
x2) * x4 -(x1 * x2 * (x4 ** 2))) + 2 * (tf.exp(-x8)) * (-2 -(x1 ** 4) \
-((tf.sqrt(2.)) * (x1 ** 3) * x10 * x2) + (x2 ** 2) * (1 + x3 ** 2) \
-(x4 ** 2) + x1 * x2 * (-((tf.sqrt(2.)) * x10 * (x3 ** 2)) + 2 * x4) \
-((x1 ** 2) * (-1 + x2 ** 2 + x3 ** 2 -(x4 ** 2)))) -((tf.exp(x8)) * \
(2 + x10 ** 2) * (2 + (x1 ** 2) * (-1 + x2 ** 2 -(x3 ** 2)) + x4 ** 2 \
+ x1 * x2 * ((tf.sqrt(2.)) * x10 * (x2 ** 2 + x3 ** 2) + 2 * x4) + (x2 \
** 2) * (-1 + x2 ** 2 + x3 ** 2 -(x4 ** 2))))

def V7d_sugra_1_2_3_4_5_8_10(x):
    x1,x2,x3,x4,x5,x8,x10=tf.split(x,7,axis=1)
    return 2 -4 * (x1 ** 2) + x1 ** 4 -4 * (x2 ** 2) + 4 * (x1 ** 2) * (x2 ** \
2) + x2 ** 4 -4 * (x3 ** 2) -2 * (x1 ** 2) * (x3 ** 2) -2 * (x2 ** 2) \
* (x3 ** 2) -2 * (x3 ** 4) + (x10 ** 2) * (1 + 3 * (x1 ** 2) * (x2 ** \
2) + (2 + x1 ** 2 + x2 ** 2) * (x3 ** 2) + x3 ** 4) + (tf.exp(-2 * \
x8)) * (1 + 2 * (x3 ** 2) + (x1 ** 2 + x3 ** 2) ** 2) + 0.25 * \
(tf.exp(2 * x8)) * ((2 + x10 ** 2) ** 2) * (1 + 2 * (x3 ** 2) + (x2 ** \
2 + x3 ** 2) ** 2) + 4 * (x4 ** 2) + x4 ** 4 -4 * x1 * x3 * x5 + 2 * \
(x1 ** 2) * (x5 ** 2) + 2 * (x4 ** 2) * (x5 ** 2) + x5 ** 4 \
-((tf.exp(x8)) * (2 + x10 ** 2) * (2 + x2 ** 4 + (x1 ** 2) * (-1 + x2 \
** 2 -(x3 ** 2)) + x4 ** 2 + x1 * x2 * ((tf.sqrt(2.)) * x10 * (x2 ** 2 \
+ x3 ** 2) + 2 * x4) + (x2 ** 2) * (-1 + x3 ** 2 -(x4 ** 2)) -2 * x2 \
* x3 * x4 * x5 -((1 + x3 ** 2) * (x5 ** 2)))) -2 * (tf.exp(-x8)) * (2 \
+ x1 ** 4 + (tf.sqrt(2.)) * (x1 ** 3) * x10 * x2 + (tf.sqrt(2.)) * x1 * \
x10 * x2 * (x3 ** 2) -((x2 ** 2) * (1 + x3 ** 2)) + x4 ** 2 + (x1 ** \
2) * (-1 + x2 ** 2 + x3 ** 2 -(x4 ** 2)) + x5 ** 2 -2 * x1 * (x2 * x4 \
+ x3 * x5)) + 2 * (tf.sqrt(2.)) * x10 * ((x1 ** 3) * x2 + (x1 ** 2) * \
x4 -(x2 * (x2 * x4 + x3 * x5)) + x1 * (x2 ** 3 + 2 * x2 * (x3 ** 2) \
-(x2 * (x4 ** 2)) -(x3 * x4 * x5)))
